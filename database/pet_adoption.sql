DROP DATABASE IF EXISTS db_petadoptions;
CREATE DATABASE db_petadoptions CHARACTER SET UTF8 COLLATE utf8_unicode_ci;
USE db_petadoptions;

DROP TABLE IF EXISTS permissions;
CREATE TABLE IF NOT EXISTS permissions (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(15) NOT NULL,
    description VARCHAR(50)
);

DROP TABLE IF EXISTS roles;
CREATE TABLE IF NOT EXISTS roles (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(15) NOT NULL
);

DROP TABLE IF EXISTS role_permissions;
CREATE TABLE IF NOT EXISTS role_permissions (
    roles_id INT UNSIGNED NOT NULL,
    permissions_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (roles_id) REFERENCES roles (`id`) ON DELETE CASCADE,
    FOREIGN KEY (permissions_id) REFERENCES permissions (`id`) ON DELETE CASCADE
);

DROP TABLE IF EXISTS photos;
CREATE TABLE IF NOT EXISTS photos (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    photo VARCHAR(50) NOT NULL
);

DROP TABLE IF EXISTS addresses;
CREATE TABLE IF NOT EXISTS addresses (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    city VARCHAR(45) NOT NULL
);

DROP TABLE IF EXISTS contacts;
CREATE TABLE IF NOT EXISTS contacts (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(15) NOT NULL,
    info VARCHAR(50)
);

DROP TABLE IF EXISTS posts;
CREATE TABLE IF NOT EXISTS posts (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    photos_id INT UNSIGNED NOT NULL,
    addresses_id INT UNSIGNED NOT NULL,
    contacts_id INT UNSIGNED NOT NULL,
    pet_name VARCHAR(30) NOT NULL,
    description TEXT NOT NULL,
    created DATE NOT NULL,
    status VARCHAR(10) NOT NULL,
    valid VARCHAR(10) NOT NULL,
    FOREIGN KEY (photos_id) REFERENCES photos (`id`) ON DELETE CASCADE,
    FOREIGN KEY (addresses_id) REFERENCES addresses (`id`) ON DELETE CASCADE,
    FOREIGN KEY (contacts_id) REFERENCES contacts (`id`) ON DELETE CASCADE
);

DROP TABLE IF EXISTS users;
CREATE TABLE IF NOT EXISTS users (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    posts_id INT UNSIGNED NOT NULL,
    username VARCHAR(30) NOT NULL,
    password VARCHAR(30) NOT NULL,
    email VARCHAR(40) NOT NULL,
    FOREIGN KEY (posts_id) REFERENCES posts (`id`) ON DELETE CASCADE
);

DROP TABLE IF EXISTS user_roles;
CREATE TABLE IF NOT EXISTS user_roles (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    roles_id INT UNSIGNED NOT NULL,
    users_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (roles_id) REFERENCES roles (`id`) ON DELETE CASCADE,
    FOREIGN KEY (users_id) REFERENCES users (`id`) ON DELETE CASCADE
);

DROP TABLE IF EXISTS filters;
CREATE TABLE IF NOT EXISTS filters (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(30) NOT NULL
);

DROP TABLE IF EXISTS post_filters;
CREATE TABLE IF NOT EXISTS post_filters (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    posts_id INT UNSIGNED NOT NULL,
    filterS_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (posts_id) REFERENCES posts (`id`) ON DELETE CASCADE,
    FOREIGN KEY (filters_id) REFERENCES filters (`id`) ON DELETE CASCADE
);